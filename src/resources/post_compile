#!/usr/bin/env python

'''
Mac OS X

tools.beanupload.upload.pattern="{cmd.path}/post_compile" "-board={build.mcu}" "-tools={cmd.path}" "-path={build.path}" "-file={build.project_name}" "-bean_variant={build.bean_variant}"

Example:
-board=atmega328p
-tools=/Applications/Arduino.app/Contents/Java/hardware/tools/bean
-path=/var/folders/34/886kwtkx31g2zgglpg8th7400000gn/T/buildf38d4be60096b3615388b79e01a0e4e5.tmp
-file=sleep.ino
-bean_variant=2
'''

'''
Windows

tools.beanupload.upload.pattern.windows="{cmd.path}\WinBeanPostScript.exe" "-path={build.path}" "-file={build.project_name}" "-bean_variant={build.bean_variant}"

Example:
...
'''

import os
import sys
import shutil
import platform

COMPILED_BEAN_SKETCH_LOCATION = os.path.join(os.path.expanduser("~"), '.beansketches')
DEBUG_LOG = os.path.abspath(os.path.join(os.path.expanduser('~'), 'post_compile.log'))
SILENT = False


def debug(msg, mode='a'):
    if SILENT:
        return

    with open(DEBUG_LOG, mode) as f:
        f.write("{}{}".format(msg, '\n'))


def parse_input_unix(sys_args):
    args = {}
    for a in sys_args[1:]:
        debug(str(a))
        arg_name, arg_value = a.split('=', 1)  # split on first occurance of "="
        arg_name = arg_name.split('-')[-1]
        args[arg_name] = arg_value
    return args

def parse_input_windows(sys_args):
    pass


def copy_hex(args):
    debug(str(args))
    sketch_name, extension = os.path.splitext(args['file'])
    tmp_compiled_path = os.path.join(args['path'], "{}.hex".format(args['file']))
    perm_compiled_path = os.path.join(COMPILED_BEAN_SKETCH_LOCATION, "{}.hex".format(sketch_name))
    shutil.copyfile(tmp_compiled_path, perm_compiled_path)


debug('post compile started', mode='wb')

if (platform.system() == 'Windows'):
    parsed_args = parse_input_windows(sys.argv)
else:
    parsed_args = parse_input_unix(sys.argv)
copy_hex(parsed_args)
debug('done!')
